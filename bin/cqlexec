#!/usr/bin/env ruby
# encoding: utf-8

$: << File.expand_path('../../lib', __FILE__)

require 'cql'
require 'cql/connection'


def check_response!(response)
  abort("Error: #{response.message} (##{response.code})") if response.is_a?(Cql::ErrorResponse)
  response
end

connection = Cql::Connection.new.open

connection.on_event do |event|
  $stdout.puts(event)
end

request = Cql::StartupRequest.new
$stderr.puts(request)
response = check_response!(connection.execute!(request))
$stdout.puts(response)

request = Cql::RegisterRequest.new('TOPOLOGY_CHANGE', 'STATUS_CHANGE', 'SCHEMA_CHANGE')
$stderr.puts(request)
response = check_response!(connection.execute!(request))
$stdout.puts(response)

buffer = STDIN.read
buffer.split(';').each do |query|
  query.strip!
  if query.length > 0
    request = Cql::QueryRequest.new(query, :one)
    $stderr.puts(request)
    response = check_response!(connection.execute!(request))
    $stdout.puts(response)
  end
end

connection.close