#!/usr/bin/env ruby
# encoding: utf-8

$: << File.expand_path('../../lib', __FILE__)

require 'cql'
require 'cql/connection'


def check_response!(response)
  abort("Error: #{response.message} (##{response.code})") if response.is_a?(Cql::ErrorResponse)
  response
end

class Tracer
  def initialize(io)
    @io = io
  end

  def write(str)
    @io.puts("TRACE #{str.inspect}")
  end
  alias_method :<<, :write
end

connection = Cql::Connection.new.open

check_response!(connection.execute!(Cql::StartupRequest.new))

buffer = STDIN.read
buffer.split(';').each do |query|
  query.strip!
  if query.length > 0
    $stderr.puts(query)
    request = Cql::QueryRequest.new(query, :one)
    response = check_response!(connection.execute!(request))
    puts(response)
  end
end

connection.close